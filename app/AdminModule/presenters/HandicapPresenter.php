<?php

namespace App\AdminModule\Presenters;


use App\Components\Form\HandicapForm;
use App\Model\Service\Handicap;
use Cepi\StringUtils;
use Nette;


class HandicapPresenter extends BasePresenter
{
    public $handicap;

    /** @var Handicap $handService */
    public $handService;

    public function startup()
    {
        parent::startup(); // TODO: Change the autogenerated stub

        $this->handService = $this->context->getService('Handicap');
    }

    public function actionDefault($id)
    {
        $handicap = $this->handService->getById($id);
        if($handicap !== false) {
            $this->handicap = $handicap;
            $this->template->handicap = $this->handicap;
            $this->template->cats = $this->handService->getCats($handicap);
        } else {
            throw new Nette\Application\BadRequestException('Handicap does not exist', 404);
        }
    }

    public function actionList()
    {
        $this->template->handicaps = $this->handService->getAll();
    }

    public function actionEdit($id)
    {
        $handicap = $this->handService->getById($id);
        if($handicap !== false) {
            $this->handicap = $handicap;
        } else {
            throw new Nette\Application\BadRequestException('Color does not exist', 404);
        }
    }

    public function createComponentEditHandicapForm()
    {
        $form = new HandicapForm();

        $form->setDefaults([
            'name' => $this->handicap->name,
            'severity' => $this->handicap->severity
        ]);

        $form->addSubmit('submit', 'Uložit');

        $form->onSuccess[] = array($this, 'editHandicapFormSuccess');

        return $form;
    }

    public function editHandicapFormSuccess(Nette\Forms\Form $form)
    {
        $values = $form->getValues();
        if($this->handicap) {
            $this->handicap->update([
                'name' => StringUtils::tmws($values->name),
                'severity' => StringUtils::caws($values->severity)
            ]);
            $this->flashMessage('Handicap byl upraven', 'info');
        } else {
            $this->flashMessage('Handicap neexistuje', 'warning');
        }

        $this->redirect('list');
    }

    public function actionAdd()
    {

    }

    public function createComponentAddHandicapForm()
    {
        $form = new HandicapForm();

        $form->addSubmit('submit', 'Přidat');

        $form->onSuccess[] = array($this, 'addHandicapFormSuccess');

        return $form;
    }

    public function addHandicapFormSuccess(Nette\Forms\Form $form)
    {
        $values = $form->getValues();

        $this->handService->insert([
            'name' => StringUtils::tmws($values->name),
            'severity' => StringUtils::caws($values->severity)
        ]);
        $this->flashMessage('Handicap byl přidán', 'info');
        $this->redirect('list');
    }
}

